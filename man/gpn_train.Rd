% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gpn_train.R
\name{gpn_train}
\alias{gpn_train}
\title{Bipartite GPN over Different Tuning Parameters}
\usage{
gpn_train(
  Net,
  replicates = 50,
  weight = TRUE,
  metric = "kl_divergence_snp",
  tuneGrid = seq(0.05, 0.95, 0.05),
  ...
)
}
\arguments{
\item{Net}{A adjacency matrix with genotype or genes as rows,
phenotype as columns and the association as entries.
The adjacency matrix of the bipartite network which
could be a simple matrix or data frame.}

\item{replicates}{The number of replicates is used to
choose optimal parameter \code{tau}, default is 50.}

\item{weight}{Logical; if TRUE, bipartite projection
will include edge weights. Defaults to TRUE.}

\item{metric}{A string specifying which entropy to use.
Possible values are: \code{"kl_divergence_snp"},
\code{"kl_divergence_phe"},\code{"kl_divergence_all"},
\code{"cross_entropy_snp"},\code{"cross_entropy_phe"},
\code{"cross_entropy_all"}. The default is
\code{"kl_divergence_all"}.}

\item{tuneGrid}{The vector with possible tuning values \code{tau}.
it's should between 0 to 1, default argument from 0.05 to 0.95
with a step size of 0.05}

\item{\dots}{Arguments passed to the internal function
\code{degree_shrink} to avoid no definition of entropy.
The default is \code{ratio = 1e-10}.}
}
\value{
A list of object type containing:
 \item{modelIonfo }{The original Bipartite GPN and
 predefined parameters.} \item{parameter}{A vector
 contains all tuning parameters.} \item{metric}{the method
 is used to choose the well-defined bipartite GPN.}
 \item{entropy}{A list consists of degree entropy,
 cross-entropy, and kl_divergence over different
 tuning parameters.} \item{perfEntropy}{The performance
 of different metric.} \item{bestTune}{The best tuning parameter
 corresponds to the well-define bipartite GPN.}
 \item{finalModel}{The final output includes the denser and
 well-defined adjacency matrix of GPN, and the network index,
 such as degree, betweenness, cluster,etc. }
}
\description{
Bipartite GPN over Different Tuning Parameters
}
\examples{
set.seed(123)
Net <- matrix(rnorm(2000)^2, nrow = 500, ncol = 4)
out <- gpn_train(Net,replicates=10,metric = "kl_divergence_snp",tuneGrid=seq(0.1,0.9,0.1))

}
\keyword{GPN}
